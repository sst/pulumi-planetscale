// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package planetscale

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sst/pulumi-planetscale/sdk/go/planetscale/internal"
)

// A list of PlanetScale database passwords.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/sst/pulumi-planetscale/sdk/go/planetscale"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := planetscale.GetPasswords(ctx, &planetscale.GetPasswordsArgs{
//				Organization: "example",
//				Database:     "example_db",
//				Branch:       "main",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("passwords", example)
//			return nil
//		})
//	}
//
// ```
func GetPasswords(ctx *pulumi.Context, args *GetPasswordsArgs, opts ...pulumi.InvokeOption) (*GetPasswordsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetPasswordsResult
	err := ctx.Invoke("planetscale:index/getPasswords:getPasswords", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getPasswords.
type GetPasswordsArgs struct {
	Branch           string  `pulumi:"branch"`
	Database         string  `pulumi:"database"`
	Organization     string  `pulumi:"organization"`
	ReadOnlyRegionId *string `pulumi:"readOnlyRegionId"`
}

// A collection of values returned by getPasswords.
type GetPasswordsResult struct {
	Branch   string `pulumi:"branch"`
	Database string `pulumi:"database"`
	// The provider-assigned unique ID for this managed resource.
	Id               string                 `pulumi:"id"`
	Organization     string                 `pulumi:"organization"`
	Passwords        []GetPasswordsPassword `pulumi:"passwords"`
	ReadOnlyRegionId *string                `pulumi:"readOnlyRegionId"`
}

func GetPasswordsOutput(ctx *pulumi.Context, args GetPasswordsOutputArgs, opts ...pulumi.InvokeOption) GetPasswordsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetPasswordsResult, error) {
			args := v.(GetPasswordsArgs)
			r, err := GetPasswords(ctx, &args, opts...)
			var s GetPasswordsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetPasswordsResultOutput)
}

// A collection of arguments for invoking getPasswords.
type GetPasswordsOutputArgs struct {
	Branch           pulumi.StringInput    `pulumi:"branch"`
	Database         pulumi.StringInput    `pulumi:"database"`
	Organization     pulumi.StringInput    `pulumi:"organization"`
	ReadOnlyRegionId pulumi.StringPtrInput `pulumi:"readOnlyRegionId"`
}

func (GetPasswordsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPasswordsArgs)(nil)).Elem()
}

// A collection of values returned by getPasswords.
type GetPasswordsResultOutput struct{ *pulumi.OutputState }

func (GetPasswordsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPasswordsResult)(nil)).Elem()
}

func (o GetPasswordsResultOutput) ToGetPasswordsResultOutput() GetPasswordsResultOutput {
	return o
}

func (o GetPasswordsResultOutput) ToGetPasswordsResultOutputWithContext(ctx context.Context) GetPasswordsResultOutput {
	return o
}

func (o GetPasswordsResultOutput) Branch() pulumi.StringOutput {
	return o.ApplyT(func(v GetPasswordsResult) string { return v.Branch }).(pulumi.StringOutput)
}

func (o GetPasswordsResultOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v GetPasswordsResult) string { return v.Database }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetPasswordsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetPasswordsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetPasswordsResultOutput) Organization() pulumi.StringOutput {
	return o.ApplyT(func(v GetPasswordsResult) string { return v.Organization }).(pulumi.StringOutput)
}

func (o GetPasswordsResultOutput) Passwords() GetPasswordsPasswordArrayOutput {
	return o.ApplyT(func(v GetPasswordsResult) []GetPasswordsPassword { return v.Passwords }).(GetPasswordsPasswordArrayOutput)
}

func (o GetPasswordsResultOutput) ReadOnlyRegionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPasswordsResult) *string { return v.ReadOnlyRegionId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetPasswordsResultOutput{})
}
