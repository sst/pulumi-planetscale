// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package planetscale

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sst/pulumi-planetscale/sdk/go/planetscale/internal"
)

// A list of PlanetScale regions.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/sst/pulumi-planetscale/sdk/go/planetscale"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := planetscale.GetDatabaseRegions(ctx, &planetscale.GetDatabaseRegionsArgs{
//				Organization: "example.com",
//				Name:         "example_db",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("databaseRegions", example)
//			return nil
//		})
//	}
//
// ```
func GetDatabaseRegions(ctx *pulumi.Context, args *GetDatabaseRegionsArgs, opts ...pulumi.InvokeOption) (*GetDatabaseRegionsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetDatabaseRegionsResult
	err := ctx.Invoke("planetscale:index/getDatabaseRegions:getDatabaseRegions", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDatabaseRegions.
type GetDatabaseRegionsArgs struct {
	// The database for which the regions are available.
	Name string `pulumi:"name"`
	// The organization for which the regions are available.
	Organization string `pulumi:"organization"`
}

// A collection of values returned by getDatabaseRegions.
type GetDatabaseRegionsResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The database for which the regions are available.
	Name string `pulumi:"name"`
	// The organization for which the regions are available.
	Organization string `pulumi:"organization"`
	// The list of regions available for the database.
	Regions []GetDatabaseRegionsRegion `pulumi:"regions"`
}

func GetDatabaseRegionsOutput(ctx *pulumi.Context, args GetDatabaseRegionsOutputArgs, opts ...pulumi.InvokeOption) GetDatabaseRegionsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetDatabaseRegionsResult, error) {
			args := v.(GetDatabaseRegionsArgs)
			r, err := GetDatabaseRegions(ctx, &args, opts...)
			var s GetDatabaseRegionsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetDatabaseRegionsResultOutput)
}

// A collection of arguments for invoking getDatabaseRegions.
type GetDatabaseRegionsOutputArgs struct {
	// The database for which the regions are available.
	Name pulumi.StringInput `pulumi:"name"`
	// The organization for which the regions are available.
	Organization pulumi.StringInput `pulumi:"organization"`
}

func (GetDatabaseRegionsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabaseRegionsArgs)(nil)).Elem()
}

// A collection of values returned by getDatabaseRegions.
type GetDatabaseRegionsResultOutput struct{ *pulumi.OutputState }

func (GetDatabaseRegionsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabaseRegionsResult)(nil)).Elem()
}

func (o GetDatabaseRegionsResultOutput) ToGetDatabaseRegionsResultOutput() GetDatabaseRegionsResultOutput {
	return o
}

func (o GetDatabaseRegionsResultOutput) ToGetDatabaseRegionsResultOutputWithContext(ctx context.Context) GetDatabaseRegionsResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetDatabaseRegionsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseRegionsResult) string { return v.Id }).(pulumi.StringOutput)
}

// The database for which the regions are available.
func (o GetDatabaseRegionsResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseRegionsResult) string { return v.Name }).(pulumi.StringOutput)
}

// The organization for which the regions are available.
func (o GetDatabaseRegionsResultOutput) Organization() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseRegionsResult) string { return v.Organization }).(pulumi.StringOutput)
}

// The list of regions available for the database.
func (o GetDatabaseRegionsResultOutput) Regions() GetDatabaseRegionsRegionArrayOutput {
	return o.ApplyT(func(v GetDatabaseRegionsResult) []GetDatabaseRegionsRegion { return v.Regions }).(GetDatabaseRegionsRegionArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetDatabaseRegionsResultOutput{})
}
