// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package planetscale

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sst/pulumi-planetscale/sdk/go/planetscale/internal"
)

// A list of PlanetScale regions for the organization.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/sst/pulumi-planetscale/sdk/go/planetscale"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := planetscale.GetOrganizationRegions(ctx, &planetscale.GetOrganizationRegionsArgs{
//				Organization: "example",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("orgRegions", example)
//			return nil
//		})
//	}
//
// ```
func GetOrganizationRegions(ctx *pulumi.Context, args *GetOrganizationRegionsArgs, opts ...pulumi.InvokeOption) (*GetOrganizationRegionsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetOrganizationRegionsResult
	err := ctx.Invoke("planetscale:index/getOrganizationRegions:getOrganizationRegions", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getOrganizationRegions.
type GetOrganizationRegionsArgs struct {
	Organization string `pulumi:"organization"`
}

// A collection of values returned by getOrganizationRegions.
type GetOrganizationRegionsResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id           string                         `pulumi:"id"`
	Organization string                         `pulumi:"organization"`
	Regions      []GetOrganizationRegionsRegion `pulumi:"regions"`
}

func GetOrganizationRegionsOutput(ctx *pulumi.Context, args GetOrganizationRegionsOutputArgs, opts ...pulumi.InvokeOption) GetOrganizationRegionsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetOrganizationRegionsResult, error) {
			args := v.(GetOrganizationRegionsArgs)
			r, err := GetOrganizationRegions(ctx, &args, opts...)
			var s GetOrganizationRegionsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetOrganizationRegionsResultOutput)
}

// A collection of arguments for invoking getOrganizationRegions.
type GetOrganizationRegionsOutputArgs struct {
	Organization pulumi.StringInput `pulumi:"organization"`
}

func (GetOrganizationRegionsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrganizationRegionsArgs)(nil)).Elem()
}

// A collection of values returned by getOrganizationRegions.
type GetOrganizationRegionsResultOutput struct{ *pulumi.OutputState }

func (GetOrganizationRegionsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrganizationRegionsResult)(nil)).Elem()
}

func (o GetOrganizationRegionsResultOutput) ToGetOrganizationRegionsResultOutput() GetOrganizationRegionsResultOutput {
	return o
}

func (o GetOrganizationRegionsResultOutput) ToGetOrganizationRegionsResultOutputWithContext(ctx context.Context) GetOrganizationRegionsResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetOrganizationRegionsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationRegionsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetOrganizationRegionsResultOutput) Organization() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationRegionsResult) string { return v.Organization }).(pulumi.StringOutput)
}

func (o GetOrganizationRegionsResultOutput) Regions() GetOrganizationRegionsRegionArrayOutput {
	return o.ApplyT(func(v GetOrganizationRegionsResult) []GetOrganizationRegionsRegion { return v.Regions }).(GetOrganizationRegionsRegionArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetOrganizationRegionsResultOutput{})
}
