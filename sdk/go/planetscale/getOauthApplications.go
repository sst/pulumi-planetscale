// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package planetscale

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/sst/pulumi-planetscale/sdk/go/planetscale/internal"
)

// A list of PlanetScale OAuth applications. (requires feature flag)
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/sst/pulumi-planetscale/sdk/go/planetscale"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := planetscale.GetOauthApplications(ctx, &planetscale.GetOauthApplicationsArgs{
//				Organization: data.Planetscale_organization.Example.Name,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("oauthApps", example)
//			return nil
//		})
//	}
//
// ```
func GetOauthApplications(ctx *pulumi.Context, args *GetOauthApplicationsArgs, opts ...pulumi.InvokeOption) (*GetOauthApplicationsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetOauthApplicationsResult
	err := ctx.Invoke("planetscale:index/getOauthApplications:getOauthApplications", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getOauthApplications.
type GetOauthApplicationsArgs struct {
	Organization string `pulumi:"organization"`
}

// A collection of values returned by getOauthApplications.
type GetOauthApplicationsResult struct {
	Applications []GetOauthApplicationsApplication `pulumi:"applications"`
	// The provider-assigned unique ID for this managed resource.
	Id           string `pulumi:"id"`
	Organization string `pulumi:"organization"`
}

func GetOauthApplicationsOutput(ctx *pulumi.Context, args GetOauthApplicationsOutputArgs, opts ...pulumi.InvokeOption) GetOauthApplicationsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetOauthApplicationsResult, error) {
			args := v.(GetOauthApplicationsArgs)
			r, err := GetOauthApplications(ctx, &args, opts...)
			var s GetOauthApplicationsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetOauthApplicationsResultOutput)
}

// A collection of arguments for invoking getOauthApplications.
type GetOauthApplicationsOutputArgs struct {
	Organization pulumi.StringInput `pulumi:"organization"`
}

func (GetOauthApplicationsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOauthApplicationsArgs)(nil)).Elem()
}

// A collection of values returned by getOauthApplications.
type GetOauthApplicationsResultOutput struct{ *pulumi.OutputState }

func (GetOauthApplicationsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOauthApplicationsResult)(nil)).Elem()
}

func (o GetOauthApplicationsResultOutput) ToGetOauthApplicationsResultOutput() GetOauthApplicationsResultOutput {
	return o
}

func (o GetOauthApplicationsResultOutput) ToGetOauthApplicationsResultOutputWithContext(ctx context.Context) GetOauthApplicationsResultOutput {
	return o
}

func (o GetOauthApplicationsResultOutput) Applications() GetOauthApplicationsApplicationArrayOutput {
	return o.ApplyT(func(v GetOauthApplicationsResult) []GetOauthApplicationsApplication { return v.Applications }).(GetOauthApplicationsApplicationArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetOauthApplicationsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetOauthApplicationsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetOauthApplicationsResultOutput) Organization() pulumi.StringOutput {
	return o.ApplyT(func(v GetOauthApplicationsResult) string { return v.Organization }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetOauthApplicationsResultOutput{})
}
