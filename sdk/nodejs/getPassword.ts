// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * A PlanetScale database password.
 */
export function getPassword(args: GetPasswordArgs, opts?: pulumi.InvokeOptions): Promise<GetPasswordResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("planetscale:index/getPassword:getPassword", {
        "branch": args.branch,
        "database": args.database,
        "id": args.id,
        "organization": args.organization,
        "readOnlyRegionId": args.readOnlyRegionId,
    }, opts);
}

/**
 * A collection of arguments for invoking getPassword.
 */
export interface GetPasswordArgs {
    /**
     * The branch this password belongs to..
     */
    branch: string;
    /**
     * The datanase this branch password belongs to.
     */
    database: string;
    /**
     * The ID for the password.
     */
    id: string;
    /**
     * The organization this database branch password belongs to.
     */
    organization: string;
    /**
     * If the password is for a read-only region, the ID of the region.
     */
    readOnlyRegionId?: string;
}

/**
 * A collection of values returned by getPassword.
 */
export interface GetPasswordResult {
    /**
     * The host URL for the password.
     */
    readonly accessHostUrl: string;
    /**
     * The actor that created this branch.
     */
    readonly actor: outputs.GetPasswordActor;
    /**
     * The branch this password belongs to..
     */
    readonly branch: string;
    /**
     * When the password was created.
     */
    readonly createdAt: string;
    /**
     * The datanase this branch password belongs to.
     */
    readonly database: string;
    /**
     * The branch this password is allowed to access.
     */
    readonly databaseBranch: outputs.GetPasswordDatabaseBranch;
    /**
     * When the password was deleted.
     */
    readonly deletedAt: string;
    /**
     * When the password will expire.
     */
    readonly expiresAt: string;
    /**
     * The ID for the password.
     */
    readonly id: string;
    /**
     * The display name for the password.
     */
    readonly name: string;
    /**
     * The organization this database branch password belongs to.
     */
    readonly organization: string;
    /**
     * If the password is for a read-only region, the ID of the region.
     */
    readonly readOnlyRegionId?: string;
    /**
     * The region in which this password can be used.
     */
    readonly region: outputs.GetPasswordRegion;
    /**
     * Whether or not the password can be renewed.
     */
    readonly renewable: boolean;
    /**
     * The role for the password.
     */
    readonly role: string;
    /**
     * Time to live (in seconds) for the password. The password will be invalid and unrenewable when TTL has passed.
     */
    readonly ttlSeconds: number;
    /**
     * The username for the password.
     */
    readonly username: string;
}
/**
 * A PlanetScale database password.
 */
export function getPasswordOutput(args: GetPasswordOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPasswordResult> {
    return pulumi.output(args).apply((a: any) => getPassword(a, opts))
}

/**
 * A collection of arguments for invoking getPassword.
 */
export interface GetPasswordOutputArgs {
    /**
     * The branch this password belongs to..
     */
    branch: pulumi.Input<string>;
    /**
     * The datanase this branch password belongs to.
     */
    database: pulumi.Input<string>;
    /**
     * The ID for the password.
     */
    id: pulumi.Input<string>;
    /**
     * The organization this database branch password belongs to.
     */
    organization: pulumi.Input<string>;
    /**
     * If the password is for a read-only region, the ID of the region.
     */
    readOnlyRegionId?: pulumi.Input<string>;
}
