// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * A list of PlanetScale database passwords.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as planetscale from "@pulumi/planetscale";
 *
 * const example = planetscale.getPasswords({
 *     organization: "example",
 *     database: "example_db",
 *     branch: "main",
 * });
 * export const passwords = example;
 * ```
 */
export function getPasswords(args: GetPasswordsArgs, opts?: pulumi.InvokeOptions): Promise<GetPasswordsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("planetscale:index/getPasswords:getPasswords", {
        "branch": args.branch,
        "database": args.database,
        "organization": args.organization,
        "readOnlyRegionId": args.readOnlyRegionId,
    }, opts);
}

/**
 * A collection of arguments for invoking getPasswords.
 */
export interface GetPasswordsArgs {
    branch: string;
    database: string;
    organization: string;
    readOnlyRegionId?: string;
}

/**
 * A collection of values returned by getPasswords.
 */
export interface GetPasswordsResult {
    readonly branch: string;
    readonly database: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly organization: string;
    readonly passwords: outputs.GetPasswordsPassword[];
    readonly readOnlyRegionId?: string;
}
/**
 * A list of PlanetScale database passwords.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as planetscale from "@pulumi/planetscale";
 *
 * const example = planetscale.getPasswords({
 *     organization: "example",
 *     database: "example_db",
 *     branch: "main",
 * });
 * export const passwords = example;
 * ```
 */
export function getPasswordsOutput(args: GetPasswordsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPasswordsResult> {
    return pulumi.output(args).apply((a: any) => getPasswords(a, opts))
}

/**
 * A collection of arguments for invoking getPasswords.
 */
export interface GetPasswordsOutputArgs {
    branch: pulumi.Input<string>;
    database: pulumi.Input<string>;
    organization: pulumi.Input<string>;
    readOnlyRegionId?: pulumi.Input<string>;
}
