// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * A PlanetScale backup.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as planetscale from "@pulumi/planetscale";
 *
 * const example = planetscale.getBackup({
 *     organization: "example.com",
 *     database: "example_db",
 *     branch: "main",
 *     id: "k20nb1b7ut18",
 * });
 * export const backup = example;
 * ```
 */
export function getBackup(args: GetBackupArgs, opts?: pulumi.InvokeOptions): Promise<GetBackupResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("planetscale:index/getBackup:getBackup", {
        "branch": args.branch,
        "database": args.database,
        "id": args.id,
        "organization": args.organization,
    }, opts);
}

/**
 * A collection of arguments for invoking getBackup.
 */
export interface GetBackupArgs {
    /**
     * The branch this backup belongs to.
     */
    branch: string;
    /**
     * The database this backup belongs to.
     */
    database: string;
    /**
     * The ID of the backup.
     */
    id: string;
    /**
     * The organization this backup belongs to.
     */
    organization: string;
}

/**
 * A collection of values returned by getBackup.
 */
export interface GetBackupResult {
    /**
     * The actor that created the backup.
     */
    readonly actor: outputs.GetBackupActor;
    /**
     * The backup policy being followed.
     */
    readonly backupPolicy: outputs.GetBackupBackupPolicy;
    /**
     * The branch this backup belongs to.
     */
    readonly branch: string;
    /**
     * When the backup was created.
     */
    readonly createdAt: string;
    /**
     * The database this backup belongs to.
     */
    readonly database: string;
    /**
     * The estimated storage cost of the backup.
     */
    readonly estimatedStorageCost: string;
    /**
     * The ID of the backup.
     */
    readonly id: string;
    /**
     * The name of the backup.
     */
    readonly name: string;
    /**
     * The organization this backup belongs to.
     */
    readonly organization: string;
    /**
     * Whether or not the backup policy is required.
     */
    readonly required: boolean;
    /**
     * Branches that have been restored with this backup.
     */
    readonly restoredBranches: string[];
    /**
     * The size of the backup.
     */
    readonly size: number;
    /**
     * The current state of the backup.
     */
    readonly state: string;
    /**
     * When the backup was last updated.
     */
    readonly updatedAt: string;
}
/**
 * A PlanetScale backup.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as planetscale from "@pulumi/planetscale";
 *
 * const example = planetscale.getBackup({
 *     organization: "example.com",
 *     database: "example_db",
 *     branch: "main",
 *     id: "k20nb1b7ut18",
 * });
 * export const backup = example;
 * ```
 */
export function getBackupOutput(args: GetBackupOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetBackupResult> {
    return pulumi.output(args).apply((a: any) => getBackup(a, opts))
}

/**
 * A collection of arguments for invoking getBackup.
 */
export interface GetBackupOutputArgs {
    /**
     * The branch this backup belongs to.
     */
    branch: pulumi.Input<string>;
    /**
     * The database this backup belongs to.
     */
    database: pulumi.Input<string>;
    /**
     * The ID of the backup.
     */
    id: pulumi.Input<string>;
    /**
     * The organization this backup belongs to.
     */
    organization: pulumi.Input<string>;
}
